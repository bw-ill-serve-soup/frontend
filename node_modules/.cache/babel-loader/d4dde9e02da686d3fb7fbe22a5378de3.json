{"ast":null,"code":"import _defineProperty from \"/Users/masonkarsevar/lambda-school/lambda-week13/frontend/iss-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/masonkarsevar/lambda-school/lambda-week13/frontend/iss-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/masonkarsevar/lambda-school/lambda-week13/frontend/iss-frontend/src/components/AddItemForm/AddItemForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react'; // import './AddItemForm.scss';\n\nimport { Form, Button, Message } from 'semantic-ui-react';\n\nconst AddItemForm = props => {\n  // what will be passed down as 'props' from App.js?\n  // addItem function -> post request to backend\n  const addItem = props.addItem,\n        messageStatus = props.messageStatus; // State\n\n  const initialState = {\n    quantity: '',\n    weightUnit: '',\n    inventoryItem: ''\n  };\n\n  const _useState = useState(initialState),\n        _useState2 = _slicedToArray(_useState, 2),\n        item = _useState2[0],\n        setItem = _useState2[1]; // Temporary, this will probably include an 'addItem' function from App.js\n\n\n  const handleChange = event => {\n    setItem(_objectSpread({}, item, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log('this works');\n    addItem(item);\n    setItem(initialState);\n    props.history.push('/');\n  };\n\n  return React.createElement(\"div\", {\n    className: \"addItem-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"headline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Add an item to your inventory\"), React.createElement(\"div\", {\n    className: \"form-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: handleSubmit,\n    inverted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Form.Input, {\n    required: true,\n    label: \"Item name\",\n    placeholder: \"ex. Banana\",\n    value: item.inventoryItem,\n    name: \"inventoryItem\",\n    type: \"text\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(Form.Group, {\n    widths: \"equal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Form.Input, {\n    required: true,\n    fluid: true,\n    label: \"Item weight\",\n    placeholder: \"ex. 3 lbs.\",\n    value: item.weightUnit,\n    name: \"weightUnit\",\n    type: \"text\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    required: true,\n    fluid: true,\n    label: \"Quantity\",\n    placeholder: \"ex. 5\",\n    value: item.quantity,\n    name: \"quantity\",\n    type: \"number\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"button-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: \"sub-button\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Add new item\")), React.createElement(\"div\", {\n    className: \"message-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: messageStatus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Message, {\n    positive: true,\n    header: \"Success\",\n    content: \"A new item was added to your inventory\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })))))));\n};\n\nexport default AddItemForm;","map":{"version":3,"sources":["/Users/masonkarsevar/lambda-school/lambda-week13/frontend/iss-frontend/src/components/AddItemForm/AddItemForm.js"],"names":["React","useState","Form","Button","Message","AddItemForm","props","addItem","messageStatus","initialState","quantity","weightUnit","inventoryItem","item","setItem","handleChange","event","target","name","value","handleSubmit","preventDefault","console","log","history","push"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n// import './AddItemForm.scss';\nimport { Form, Button, Message } from 'semantic-ui-react';\n\n\n\n\n\nconst AddItemForm = props => {\n    // what will be passed down as 'props' from App.js?\n    // addItem function -> post request to backend\n\n    const { addItem, messageStatus } = props;\n\n\n    // State\n    \n    const initialState = {quantity: '', weightUnit: '', inventoryItem: ''};\n\n    \n    const [item, setItem] = useState(initialState);\n\n\n    \n\n    // Temporary, this will probably include an 'addItem' function from App.js\n    \n    const handleChange = event => {\n        setItem({ ...item, [event.target.name]: event.target.value });\n    };\n    \n    \n    \n    const handleSubmit = event => {\n        event.preventDefault();\n        console.log('this works');\n        addItem(item);\n        \n        setItem(initialState);\n        props.history.push('/');\n    }\n\n    return (\n      <div className=\"addItem-container\">\n        <h2 className=\"headline\">Add an item to your inventory</h2>\n\n        <div className=\"form-container\">\n          <div className=\"form-wrapper\">\n            <Form onSubmit={handleSubmit} inverted>\n              <Form.Input\n                required\n                label=\"Item name\"\n                placeholder=\"ex. Banana\"\n                value={item.inventoryItem}\n                name=\"inventoryItem\"\n                type=\"text\"\n                onChange={handleChange}\n              />\n              <Form.Group widths=\"equal\">\n                <Form.Input\n                  required\n                  fluid\n                  label=\"Item weight\"\n                  placeholder=\"ex. 3 lbs.\"\n                  value={item.weightUnit}\n                  name=\"weightUnit\"\n                  type=\"text\"\n                  onChange={handleChange}\n                />\n                <Form.Input\n                  required\n                  fluid\n                  label=\"Quantity\"\n                  placeholder=\"ex. 5\"\n                  value={item.quantity}\n                  name=\"quantity\"\n                  type=\"number\"\n                  onChange={handleChange}\n                />\n              </Form.Group>\n\n              <div className=\"button-wrapper\">\n                <Button className=\"sub-button\" type=\"submit\">\n                  Add new item\n                </Button>\n              </div>\n              <div className=\"message-wrapper\">\n                <div className={messageStatus}>\n                  <Message\n                    positive\n                    header=\"Success\"\n                    content=\"A new item was added to your inventory\"\n                  />\n                </div>\n              </div>\n            </Form>\n          </div>\n        </div>\n      </div>\n    );\n}\n\nexport default AddItemForm;\n\n"]},"metadata":{},"sourceType":"module"}