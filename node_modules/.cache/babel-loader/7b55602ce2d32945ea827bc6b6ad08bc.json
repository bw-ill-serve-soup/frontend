{"ast":null,"code":"import _defineProperty from \"/Users/masonkarsevar/lambda-school/lambda-week13/frontend/iss-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FETCH_INVENTORY_START, FETCH_INVENTORY_SUCCESS, FETCH_INVENTORY_FAILURE, ADD_INVENTORY_START, ADD_INVENTORY_SUCCESS, ADD_INVENTORY_FAILURE, DELETE_INVENTORY_START, DELETE_INVENTORY_SUCCESS, DELETE_INVENTORY_FAILURE } from '../Actions';\nconst initialState = {\n  inventory: [],\n  error: ''\n};\n\nfunction reducer(state = initialState, action) {\n  console.log('reducer', action);\n\n  switch (action.type) {\n    case FETCH_INVENTORY_START:\n      console.log('from reducer', action);\n      return _objectSpread({}, state);\n\n    case FETCH_INVENTORY_SUCCESS:\n      return _objectSpread({}, state, {\n        inventory: action.payload\n      });\n\n    case FETCH_INVENTORY_FAILURE:\n      return _objectSpread({}, state, {\n        error: action.payload\n      });\n\n    case ADD_INVENTORY_START:\n      return _objectSpread({}, state);\n\n    case ADD_INVENTORY_SUCCESS:\n      return _objectSpread({}, state, {\n        inventory: action.payload\n      });\n\n    case ADD_INVENTORY_FAILURE:\n      return _objectSpread({}, state, {\n        error: action.payload\n      });\n\n    case DELETE_INVENTORY_START:\n      return _objectSpread({}, state);\n\n    case DELETE_INVENTORY_SUCCESS:\n      return _objectSpread({}, state, {\n        inventory: state.inventory.filter(item => item.id !== action.payload.id)\n      });\n\n    case DELETE_INVENTORY_FAILURE:\n      return _objectSpread({}, state);\n\n    default:\n      return _objectSpread({}, state);\n  }\n}\n\nexport default reducer;","map":{"version":3,"sources":["/Users/masonkarsevar/lambda-school/lambda-week13/frontend/iss-frontend/src/reducers/index.js"],"names":["FETCH_INVENTORY_START","FETCH_INVENTORY_SUCCESS","FETCH_INVENTORY_FAILURE","ADD_INVENTORY_START","ADD_INVENTORY_SUCCESS","ADD_INVENTORY_FAILURE","DELETE_INVENTORY_START","DELETE_INVENTORY_SUCCESS","DELETE_INVENTORY_FAILURE","initialState","inventory","error","reducer","state","action","console","log","type","payload","filter","item","id"],"mappings":";;;;;;AAAA,SACIA,qBADJ,EAEIC,uBAFJ,EAGIC,uBAHJ,EAIIC,mBAJJ,EAKIC,qBALJ,EAMIC,qBANJ,EAOIC,sBAPJ,EAQIC,wBARJ,EASIC,wBATJ,QAUO,YAVP;AAYA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE,EADM;AAEjBC,EAAAA,KAAK,EAAE;AAFU,CAArB;;AAKA,SAASC,OAAT,CAAiBC,KAAK,GAACJ,YAAvB,EAAqCK,MAArC,EAA6C;AACzCC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,MAAvB;;AAEA,UAAQA,MAAM,CAACG,IAAf;AACI,SAAKjB,qBAAL;AACIe,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,MAA5B;AACA,+BACOD,KADP;;AAIJ,SAAKZ,uBAAL;AACI,+BACOY,KADP;AAEIH,QAAAA,SAAS,EAAEI,MAAM,CAACI;AAFtB;;AAKJ,SAAKhB,uBAAL;AACI,+BACOW,KADP;AAEIF,QAAAA,KAAK,EAAEG,MAAM,CAACI;AAFlB;;AAKJ,SAAKf,mBAAL;AACI,+BACOU,KADP;;AAGJ,SAAKT,qBAAL;AACI,+BACOS,KADP;AAEIH,QAAAA,SAAS,EAAEI,MAAM,CAACI;AAFtB;;AAIJ,SAAKb,qBAAL;AACI,+BACOQ,KADP;AAEIF,QAAAA,KAAK,EAAEG,MAAM,CAACI;AAFlB;;AAKJ,SAAKZ,sBAAL;AACI,+BACOO,KADP;;AAGJ,SAAKN,wBAAL;AACI,+BACOM,KADP;AAEIH,QAAAA,SAAS,EAAEG,KAAK,CAACH,SAAN,CAAgBS,MAAhB,CAAuBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYP,MAAM,CAACI,OAAP,CAAeG,EAA1D;AAFf;;AAIJ,SAAKb,wBAAL;AACI,+BACOK,KADP;;AAGJ;AACI,+BACOA,KADP;AAhDR;AAoDH;;AAED,eAAeD,OAAf","sourcesContent":["import {\n    FETCH_INVENTORY_START,\n    FETCH_INVENTORY_SUCCESS,\n    FETCH_INVENTORY_FAILURE,\n    ADD_INVENTORY_START,\n    ADD_INVENTORY_SUCCESS,\n    ADD_INVENTORY_FAILURE,\n    DELETE_INVENTORY_START,\n    DELETE_INVENTORY_SUCCESS,\n    DELETE_INVENTORY_FAILURE\n} from '../Actions'\n\nconst initialState = {\n    inventory: [],\n    error: ''\n}\n\nfunction reducer(state=initialState, action) {\n    console.log('reducer', action);\n\n    switch (action.type) {\n        case FETCH_INVENTORY_START:\n            console.log('from reducer', action) \n            return {\n                ...state\n            }\n\n        case FETCH_INVENTORY_SUCCESS:\n            return {\n                ...state,\n                inventory: action.payload\n            }\n\n        case FETCH_INVENTORY_FAILURE:\n            return {\n                ...state,\n                error: action.payload\n            }\n\n        case ADD_INVENTORY_START:\n            return {\n                ...state\n            }\n        case ADD_INVENTORY_SUCCESS:\n            return {\n                ...state,\n                inventory: action.payload\n            }\n        case ADD_INVENTORY_FAILURE:\n            return {\n                ...state,\n                error: action.payload\n            }\n\n        case DELETE_INVENTORY_START:\n            return {\n                ...state\n            }\n        case DELETE_INVENTORY_SUCCESS:\n            return {\n                ...state,\n                inventory: state.inventory.filter(item => item.id !== action.payload.id)\n            }\n        case DELETE_INVENTORY_FAILURE:\n            return {\n                ...state\n            }\n        default:\n            return {\n                ...state\n            }\n    }\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}