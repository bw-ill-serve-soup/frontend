{"ast":null,"code":"import _slicedToArray from \"/Users/masonkarsevar/lambda-school/lambda-week13/frontend/iss-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/masonkarsevar/lambda-school/lambda-week13/frontend/iss-frontend/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport NavBar from './components/NavBar';\nimport DevLogin from './components/DevLogin';\nimport DevSignup from './components/DevSignup'; // import InventoryList from './components/InventoryList';\n\nimport './App.css';\nimport { axiosWithAuth } from './Auth/axiosWithAuth.js';\nimport AddItemForm from './components/AddItemForm/AddItemForm.js';\nimport InventoryList from './components/inventoryList';\nimport EditForm from './components/EditForm';\nimport { getInventory } from './Actions';\n\nfunction App(props) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        inventoryArray = _useState2[0],\n        setInventoryArray = _useState2[1];\n\n  useEffect(() => {\n    props.getInventory();\n  }, []); // State to display 'Success Message' on the AddItem form when post request is successful\n\n  const _useState3 = useState('message-hide'),\n        _useState4 = _slicedToArray(_useState3, 2),\n        addMessage = _useState4[0],\n        setAddMessage = _useState4[1]; // Function to use in successful post request to hide 'Success' message after 3 seconds\n\n\n  const messageReset = () => {\n    setAddMessage('message-hide');\n  };\n\n  return (// <Route>\n    React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/add_item\",\n      render: props => {\n        return localStorage.getItem('token') ? React.createElement(AddItemForm, Object.assign({}, props, {\n          messageStatus: addMessage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        })) : React.createElement(Redirect, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => {\n        return localStorage.getItem('token') ? React.createElement(InventoryList, Object.assign({}, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        })) : React.createElement(Redirect, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/login\",\n      component: DevLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/signup\",\n      component: DevSignup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/edit-item/:id\",\n      render: props => {\n        return React.createElement(EditForm, Object.assign({}, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }))\n  );\n}\n\nconst mapStateToProps = state => ({\n  inventory: state.inventory\n});\n\nexport default connect(mapStateToProps, {\n  getInventory\n})(App);","map":{"version":3,"sources":["/Users/masonkarsevar/lambda-school/lambda-week13/frontend/iss-frontend/src/App.js"],"names":["React","useState","useEffect","Route","Redirect","connect","NavBar","DevLogin","DevSignup","axiosWithAuth","AddItemForm","InventoryList","EditForm","getInventory","App","props","inventoryArray","setInventoryArray","addMessage","setAddMessage","messageReset","localStorage","getItem","mapStateToProps","state","inventory"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nimport NavBar from './components/NavBar';\nimport DevLogin from './components/DevLogin';\nimport DevSignup from './components/DevSignup';\n// import InventoryList from './components/InventoryList';\n\nimport './App.css';\nimport { axiosWithAuth } from './Auth/axiosWithAuth.js';\nimport AddItemForm from './components/AddItemForm/AddItemForm.js';\nimport InventoryList from './components/inventoryList';\nimport EditForm from './components/EditForm';\nimport {getInventory} from './Actions';\n\nfunction App(props) {\n\n  const [inventoryArray, setInventoryArray] = useState([]);\n\n  useEffect(() => {\n    props.getInventory()\n  }, []);\n  // State to display 'Success Message' on the AddItem form when post request is successful\n\n  const [addMessage, setAddMessage] = useState('message-hide');\n\n  // Function to use in successful post request to hide 'Success' message after 3 seconds\n\n  const messageReset = () => {\n    setAddMessage('message-hide');\n  }\n\n        \n  return (\n    // <Route>\n    <div className=\"App\">\n      <NavBar />\n      <Route path='/add_item' render={props => {\n        return localStorage.getItem('token') ? (\n              <AddItemForm {...props} messageStatus={addMessage}/>\n          ) : (\n              <Redirect to='/login' /> \n          )\n      }} />\n      \n\n      \n      <Route exact path='/' render={props => {\n        return localStorage.getItem('token') ? (\n              <InventoryList {...props} />\n          ) : (\n              <Redirect to='/login' /> \n          )\n      }} />\n      <Route path='/login' component={DevLogin} />\n      <Route path='/signup' component={DevSignup} />\n      <Route path='/edit-item/:id' render={props => {\n        return <EditForm {...props} />\n      }} />\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  inventory: state.inventory\n})\n\nexport default connect(\n  mapStateToProps, \n  {getInventory}\n)(App);\n\n\n"]},"metadata":{},"sourceType":"module"}