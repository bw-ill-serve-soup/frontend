{"ast":null,"code":"import _defineProperty from \"/Users/masonkarsevar/lambda-school/lambda-week13/frontend/iss-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/masonkarsevar/lambda-school/lambda-week13/frontend/iss-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/masonkarsevar/lambda-school/lambda-week13/frontend/iss-frontend/src/components/EditForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport './AddItemForm/AddItemForm.scss';\nimport { Form, Button, Message } from 'semantic-ui-react';\n\nconst EditForm = props => {\n  // what will be passed down as 'props' from App.js?\n  // addItem function -> post request to backend\n  // console.log(props.inventoryArray.find(inventory => inventory.id === Number(props.match.params.id)))\n  const editItem = props.editItem,\n        initialCard = props.initialCard,\n        messageStatus = props.messageStatus;\n\n  const _useState = useState(initialCard),\n        _useState2 = _slicedToArray(_useState, 2),\n        item = _useState2[0],\n        setItem = _useState2[1];\n\n  const handleChange = event => {\n    setItem(_objectSpread({}, item, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log('this works');\n    editItem(item);\n    setItem({\n      quantity: '',\n      weightUnit: '',\n      inventoryItem: ''\n    }); // setTimeout(props.history.push('/'), 3000);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"addItem-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, console.log(messageStatus), React.createElement(\"h2\", {\n    className: \"headline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Edit Inventory Item\"), React.createElement(\"div\", {\n    className: \"form-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Form.Input, {\n    required: true,\n    label: \"Item name\",\n    placeholder: \"ex. Banana\",\n    value: item.inventoryItem,\n    name: \"inventoryItem\",\n    type: \"text\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(Form.Group, {\n    widths: \"equal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Form.Input, {\n    required: true,\n    fluid: true,\n    label: \"Item weight\",\n    placeholder: \"ex. 3 lbs.\",\n    value: item.weightUnit,\n    name: \"weightUnit\",\n    type: \"text\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    required: true,\n    fluid: true,\n    label: \"Quantity\",\n    placeholder: \"ex. 5\",\n    value: item.quantity,\n    name: \"quantity\",\n    type: \"number\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"button-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: \"sub-button\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Add new item\")), React.createElement(\"div\", {\n    className: \"message-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: messageStatus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Message, {\n    positive: true,\n    header: \"Success\",\n    content: \"Item has been updated\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })))))));\n};\n\nexport default EditForm;","map":{"version":3,"sources":["/Users/masonkarsevar/lambda-school/lambda-week13/frontend/iss-frontend/src/components/EditForm.js"],"names":["React","useState","useEffect","Form","Button","Message","EditForm","props","editItem","initialCard","messageStatus","item","setItem","handleChange","event","target","name","value","handleSubmit","preventDefault","console","log","quantity","weightUnit","inventoryItem"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,gCAAP;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,OAAvB,QAAsC,mBAAtC;;AAIA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACtB;AACA;AACA;AAHsB,QAKdC,QALc,GAK2BD,KAL3B,CAKdC,QALc;AAAA,QAKJC,WALI,GAK2BF,KAL3B,CAKJE,WALI;AAAA,QAKSC,aALT,GAK2BH,KAL3B,CAKSG,aALT;;AAAA,oBAOET,QAAQ,CAACQ,WAAD,CAPV;AAAA;AAAA,QAOfE,IAPe;AAAA,QAOTC,OAPS;;AAStB,QAAMC,YAAY,GAAGC,KAAK,IAAI;AAC1BF,IAAAA,OAAO,mBAAMD,IAAN;AAAY,OAACG,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AAA9C,OAAP;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAGJ,KAAK,IAAI;AAC1BA,IAAAA,KAAK,CAACK,cAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAb,IAAAA,QAAQ,CAACG,IAAD,CAAR;AACAC,IAAAA,OAAO,CAAC;AAACU,MAAAA,QAAQ,EAAE,EAAX;AAAeC,MAAAA,UAAU,EAAE,EAA3B;AAA+BC,MAAAA,aAAa,EAAE;AAA9C,KAAD,CAAP,CAJ0B,CAK1B;AACH,GAND;;AAQA,SACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,OAAO,CAACC,GAAR,CAAYX,aAAZ,CADL,EAEE;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFF,EAIE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEQ,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,IAAD,CAAM,KAAN;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,KAAK,EAAC,WAFR;AAGE,IAAA,WAAW,EAAC,YAHd;AAIE,IAAA,KAAK,EAAEP,IAAI,CAACa,aAJd;AAKE,IAAA,IAAI,EAAC,eALP;AAME,IAAA,IAAI,EAAC,MANP;AAOE,IAAA,QAAQ,EAAEX,YAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAWE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,MAAM,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,KAAK,MAFP;AAGE,IAAA,KAAK,EAAC,aAHR;AAIE,IAAA,WAAW,EAAC,YAJd;AAKE,IAAA,KAAK,EAAEF,IAAI,CAACY,UALd;AAME,IAAA,IAAI,EAAC,YANP;AAOE,IAAA,IAAI,EAAC,MAPP;AAQE,IAAA,QAAQ,EAAEV,YARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAWE,oBAAC,IAAD,CAAM,KAAN;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,KAAK,MAFP;AAGE,IAAA,KAAK,EAAC,UAHR;AAIE,IAAA,WAAW,EAAC,OAJd;AAKE,IAAA,KAAK,EAAEF,IAAI,CAACW,QALd;AAME,IAAA,IAAI,EAAC,UANP;AAOE,IAAA,IAAI,EAAC,QAPP;AAQE,IAAA,QAAQ,EAAET,YARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CAXF,EAkCE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAA+B,IAAA,IAAI,EAAC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CAlCF,EAuCE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEH,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,MAAM,EAAC,SAFT;AAGE,IAAA,OAAO,EAAC,uBAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAvCF,CADF,CADF,CAJF,CADF;AA4DH,CAjFD;;AAmFA,eAAeJ,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './AddItemForm/AddItemForm.scss';\nimport { Form, Button, Message } from 'semantic-ui-react';\n\n\n\nconst EditForm = props => {\n    // what will be passed down as 'props' from App.js?\n    // addItem function -> post request to backend\n    // console.log(props.inventoryArray.find(inventory => inventory.id === Number(props.match.params.id)))\n\n    const { editItem, initialCard, messageStatus } = props;\n   \n    const [item, setItem] = useState(initialCard)\n    \n    const handleChange = event => {\n        setItem({ ...item, [event.target.name]: event.target.value });\n    };\n    \n    const handleSubmit = event => {\n        event.preventDefault();\n        console.log('this works');\n        editItem(item);\n        setItem({quantity: '', weightUnit: '', inventoryItem: ''});\n        // setTimeout(props.history.push('/'), 3000);\n    }\n\n    return (\n      <div className=\"addItem-container\">\n          {console.log(messageStatus)}\n        <h2 className=\"headline\">Edit Inventory Item</h2>\n\n        <div className=\"form-container\">\n          <div className=\"form-wrapper\">\n            <Form onSubmit={handleSubmit}>\n            \n              <Form.Input\n                required\n                label=\"Item name\"\n                placeholder=\"ex. Banana\"\n                value={item.inventoryItem}\n                name=\"inventoryItem\"\n                type=\"text\"\n                onChange={handleChange}\n              />\n              <Form.Group widths=\"equal\">\n                <Form.Input\n                  required\n                  fluid\n                  label=\"Item weight\"\n                  placeholder=\"ex. 3 lbs.\"\n                  value={item.weightUnit}\n                  name=\"weightUnit\"\n                  type=\"text\"\n                  onChange={handleChange}\n                />\n                <Form.Input\n                  required\n                  fluid\n                  label=\"Quantity\"\n                  placeholder=\"ex. 5\"\n                  value={item.quantity}\n                  name=\"quantity\"\n                  type=\"number\"\n                  onChange={handleChange}\n                />\n              </Form.Group>\n\n              <div className=\"button-wrapper\">\n                <Button className=\"sub-button\" type=\"submit\">\n                  Add new item\n                </Button>\n              </div>\n              <div className='message-wrapper'>\n                <div className={messageStatus}>\n                  <Message\n                    positive\n                    header='Success'\n                    content='Item has been updated'\n                  />\n                </div>\n              </div>\n            </Form>\n          </div>\n        </div>\n      </div>\n    );\n}\n\nexport default EditForm;"]},"metadata":{},"sourceType":"module"}