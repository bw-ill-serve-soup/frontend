{"ast":null,"code":"var _jsxFileName = \"/Users/masonkarsevar/lambda-school/lambda-week13/frontend/iss-frontend/src/components/EditForm.js\";\nimport React, { useState, useEffect } from 'react';\nimport './AddItemForm/AddItemForm.scss';\nimport { Form, Button, Message } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { editItem } from '../Actions';\n\nconst EditForm = props => {\n  // what will be passed down as 'props' from App.js?\n  // addItem function -> post request to backend\n  // console.log(props.inventoryArray.find(inventory => inventory.id === Number(props.match.params.id)))\n  const editItem = props.editItem,\n        inventory = props.inventory;\n  console.log(inventory); // const [item, setItem] = useState(initialCard)\n  // const handleChange = event => {\n  //     setItem({ ...item, [event.target.name]: event.target.value });\n  // };\n  // const handleSubmit = event => {\n  //     event.preventDefault();\n  //     console.log('this works');\n  //     editItem(item);\n  //     setItem({quantity: '', weightUnit: '', inventoryItem: ''});\n  //     props.history.push('/');\n  // }\n\n  return React.createElement(\"div\", {\n    className: \"addItem-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  });\n};\n\nconst mapStateToProps = state => ({\n  inventory: state.inventory\n});\n\nexport default connect(mapStateToProps, {\n  editItem\n})(EditForm);","map":{"version":3,"sources":["/Users/masonkarsevar/lambda-school/lambda-week13/frontend/iss-frontend/src/components/EditForm.js"],"names":["React","useState","useEffect","Form","Button","Message","connect","editItem","EditForm","props","inventory","console","log","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,gCAAP;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,OAAvB,QAAsC,mBAAtC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,QAAR,QAAuB,YAAvB;;AAGA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACtB;AACA;AACA;AAHsB,QAKdF,QALc,GAKUE,KALV,CAKdF,QALc;AAAA,QAKJG,SALI,GAKUD,KALV,CAKJC,SALI;AAOtBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ,EAPsB,CAStB;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AA4DH,CAnFD;;AAqFA,MAAMG,eAAe,GAAGC,KAAK,KAAK;AAChCJ,EAAAA,SAAS,EAAEI,KAAK,CAACJ;AADe,CAAL,CAA7B;;AAIA,eAAeJ,OAAO,CACpBO,eADoB,EAEpB;AAACN,EAAAA;AAAD,CAFoB,CAAP,CAGbC,QAHa,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './AddItemForm/AddItemForm.scss';\nimport { Form, Button, Message } from 'semantic-ui-react';\nimport {connect} from 'react-redux';\nimport {editItem} from '../Actions';\n\n\nconst EditForm = props => {\n    // what will be passed down as 'props' from App.js?\n    // addItem function -> post request to backend\n    // console.log(props.inventoryArray.find(inventory => inventory.id === Number(props.match.params.id)))\n\n    const { editItem, inventory } = props;\n\n    console.log(inventory);\n   \n    // const [item, setItem] = useState(initialCard)\n    \n    // const handleChange = event => {\n    //     setItem({ ...item, [event.target.name]: event.target.value });\n    // };\n    \n    // const handleSubmit = event => {\n    //     event.preventDefault();\n    //     console.log('this works');\n    //     editItem(item);\n    //     setItem({quantity: '', weightUnit: '', inventoryItem: ''});\n    //     props.history.push('/');\n    // }\n\n    return (\n      <div className=\"addItem-container\">\n          {/* {console.log(messageStatus)}\n        <h2 className=\"headline\">Edit Inventory Item</h2>\n\n        <div className=\"form-container\">\n          <div className=\"form-wrapper\">\n            <Form onSubmit={handleSubmit}>\n            \n              <Form.Input\n                required\n                label=\"Item name\"\n                placeholder=\"ex. Banana\"\n                value={item.inventoryItem}\n                name=\"inventoryItem\"\n                type=\"text\"\n                onChange={handleChange}\n              />\n              <Form.Group widths=\"equal\">\n                <Form.Input\n                  required\n                  fluid\n                  label=\"Item weight\"\n                  placeholder=\"ex. 3 lbs.\"\n                  value={item.weightUnit}\n                  name=\"weightUnit\"\n                  type=\"text\"\n                  onChange={handleChange}\n                />\n                <Form.Input\n                  required\n                  fluid\n                  label=\"Quantity\"\n                  placeholder=\"ex. 5\"\n                  value={item.quantity}\n                  name=\"quantity\"\n                  type=\"number\"\n                  onChange={handleChange}\n                />\n              </Form.Group>\n\n              <div className=\"button-wrapper\">\n                <Button className=\"sub-button\" type=\"submit\">\n                  Add new item\n                </Button>\n              </div>\n              <div className='message-wrapper'>\n                <div className={messageStatus}>\n                  <Message\n                    positive\n                    header='Success'\n                    content='Item has been updated'\n                  />\n                </div>\n              </div>\n            </Form>\n          </div>\n        </div> */}\n      </div>\n    );\n}\n\nconst mapStateToProps = state => ({\n  inventory: state.inventory \n})\n\nexport default connect(\n  mapStateToProps,\n  {editItem}\n)(EditForm)"]},"metadata":{},"sourceType":"module"}